/*
 * FILE: color-theme.scss
 *
 * This file defines color themes used in the project, including a map of color
 * properties and values for different themes (e.g., "Light", "Dark").
 *
 * The `items` map includes:
 *  - Theme names (e.g., "Light", "Dark")
 *  - Value maps defining color properties and their values for each theme
 *  - Keys such as `text` and `background` with potential modifiers (e.g., `text--interact`)
 *
 * Ensure all themes have consistent values to prevent issues in theme application.
 *
 * Ensure value names in the `$token` map (e.g., `background`, `text`, `shadow`)
 * match the `alt-name` values in the `$exception-utility-properties` map
 * located in the `20-mixin/_theme-applier.scss` file to ensure consistent and
 * accurate generation of CSS utility classes.
 *
 * Modifiers should be included using the `--` notation (e.g., `text--interact`),
 * following the BEM methodology. This enables the system to accurately determine
 * the actual CSS property. During the generation of CSS variables and utility
 * classes, `--` is replaced with `-`, so `.u-surface-text--interact` becomes
 * `.u-surface-text-interact`.
 *
 * Colors are retrieved from the `color-palette` file using the `get` function,
 * which utilizes the `tokenCssVariable` function to fetch CSS variables.
 */

// Import design tokens and helper functions
@use "./color-palette" as color-palette;
// @use "./box-shadow" as box-shadow;
@use "../10-functions/helpers/retrieve-value.scss" as help-rtv;
@use "../10-functions/helpers/handle-string.scss" as help-str;

// Retrieve a CSS variable from the token by key
@function get($arg1: null, $arg2: null) {
  // Handle shadow tokens separately with an additional condition
  @if help-str.slugify($arg1) == "box-shadow" {
    @return help-rtv.tokenCssVariable(
      $arg2,
      box-shadow.$token,
      $token-prefix: "box-shadow",
      $exclude-base-suffix: true
    );
  } @else {
    @return help-rtv.tokenCssVariable(
      $arg1,
      color-palette.$token,
      $token-prefix: "color"
    );
  }
}

$token: (
  "title": "Color Theme",
  "description": "Themes with colors sourced from the color-palette token.",
  "items": (
    (
      "name": "Light",
      "value": (
        "global": (
          // Colors for general elements like text, background, and borders
          "text": get("Dark"),
          "background": get("Light Bright"),
          "border-color": get("Gray Glare"),
        ),
        "surface": (
          // Colors for interactive elements and surfaces like cards or panels
          "text": get("Charcoal"),
          "text--interact": get("Gray"),
          "background": get("Gray Glare"),
          "background--interact": get("Charcoal"),
          // "box-shadow": get("Box Shadow", "l"),
        ),
      ),
    ),
    (
      "name": "Dark",
      "value": (
        "global": (
          // Colors for general elements like text, background, and borders
          "text": get("Light Bright"),
          "background": get("Dark"),
          "border-color": get("Gray Glare"),
        ),
        "surface": (
          // Colors for interactive elements and surfaces like cards or panels
          "text": get("Dark"),
          "text--interact": get("Gray Bright"),
          "background": get("Light Bright"),
          "background--interact": get("Charcoal"),
          // "box-shadow": "none",
        ),
      ),
    ),
  ),
);
