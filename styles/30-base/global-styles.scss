@use "./../20-mixins/media-query.scss" as *;

/* 
  Global styles 
  Low-specificity, global styles that apply to the whole project
*/

// RESOURCES ////////////////////
/* 
  CUBE methodology: https://cube.fyi/css.html
  Sizing units reference: https://web.dev/learn/css/sizing
  Strategic unit deployment: 
  Use rem for values that should scale (e.g., typography) 
  and px for values that should not (e.g., borders, padding).
  https://www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/
*/

// MISC ////////////////////
* {
  outline: solid 1px red;
}

.bg-red {
  // background-color: red;
}

// GLOBAL SETTINGS ////////////////////
html {
  color-scheme: light dark;
  scroll-behavior: smooth;
}

body {
  // Colors
  accent-color: var(--color-primary);
  background-color: var(--color-global-background);
  color: var(--color-global-text);

  // Typography
  font-size: var(--font-size-base);
  font-family: var(--font-family-base);
  font-weight: var(--font-weight-base);
  line-height: var(--line-height-base);
  font-size-adjust: from-font;
  word-break: break-word;

  // Layout and spacing
  display: grid;
  grid-template-rows: auto 1fr auto;
  interpolate-size: allow-keywords;

  // Writing direction
  // writing-mode: vertical-lr;
  // direction: rtl;
}

// LINE HEIGHT ////////////////////
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: var(--line-height-fine);
}

// HEADINGS ////////////////////
.heading-styles {
  font-family: var(--font-family-base);
  font-weight: var(--font-weight-medium);
  letter-spacing: var(--letter-spacing-tight);
  font-kerning: normal;
  text-wrap: balance;
  hyphens: auto;
}

h1,
h2,
h3,
h4 {
  @extend .heading-styles;
}

h1 {
  font-size: var(--font-size-heading-1);
  max-inline-size: 25ch;
}

h2 {
  font-size: var(--font-size-heading-2);
  max-inline-size: 35ch;
}

h3 {
  font-size: var(--font-size-heading-3);
  max-inline-size: 45ch;
}

:where(h4, h5, h6) {
  font-size: var(--font-size-heading-4);
  max-inline-size: 55ch;
}

// TEXT ELEMENTS ////////////////////
// Introductory or prominent text
.lede {
  font-size: var(--font-size-lede);
  font-family: var(--font-family-base);
  font-weight: var(--font-weight-medium);
  max-inline-size: var(--measure, 66ch);
}

// Prose for long-form content
.prose {
  max-inline-size: var(--measure, 66ch);
  text-wrap: pretty;
}

// Paragraph text
// p {}

// Strongly important text
strong {
  font-weight: var(--font-weight-bold);
}

// Bold text without importance
b {
  font-weight: var(--font-weight-bold);
}

// Emphasized text, italic
em {
  font-style: italic;
}

// Smaller text, fine print
small {
  font-size: var(--font-size-meta);
}

// Quoted sections of text
blockquote {
  color: var(--color-light);
}

blockquote q {
  font-style: normal;
}

// Short inline quotations
q {
  quotes: "“" "”" "‘" "’";
  font-style: italic;
}

// Horizontal rule
hr {
  border: none;
  border-block-start: var(--stroke);
  margin-block: var(--flow-space, var(--space-xl));
}

// LIST ELEMENTS ////////////////////

// FORM ELEMENTS ////////////////////
// Input styles
:is(
    input:not([type="checkbox"], [type="radio"], [type="color"]),
    select,
    textarea
  ) {
  inline-size: 100%;
  padding: 0.5em 0.8em;
  border-radius: var(--radius-s);
  border: var(--stroke-solid);
  background: var(--color-dark-glare);
  color: var(--color-light);

  &::placeholder {
    color: var(--color-mid);
    opacity: 1;
  }
}

// Apply display: flex to input[type="range"] for proper alignment
input[type="range"] {
  display: flex;
  padding-inline: 0;
}

input:disabled {
  background: var(--color-mid);
}

input:disabled,
label input:disabled + * {
  cursor: not-allowed;
}

// Label styles
label {
  font-weight: var(--font-weight-medium);
}

label::after {
  content: "\A";
  white-space: pre;
}

// Labels wrap checkboxes/radios for better layout and text flow
label:has(input) {
  display: flex;
  align-items: baseline;
  gap: var(--space-s);
  font-weight: var(--font-weight-base);
}

label:has(input) + label:has(input) {
  --flow-spce: var(--space-s-m);
}

// Slightly adjusts the vertical position of the check/radio
label:has(input) input {
  transform: translateY(-0.1ex);
}

// Fieldset styles
fieldset {
  border: var(--stroke);
  padding: var(--space-s);
}

legend {
  font-weight: var(--font-weight-medium);
  padding-inline: var(--space-xs);
}

// DETAILS ELEMENTS ////////////////////
summary {
  font-weight: var(--font-weight-bold);
  cursor: pointer;
}

details[open] summary {
  margin-block-end: var(--space-s);
}

// TABLE ELEMENTS ////////////////////
table {
  border: var(--stroke);
  border-collapse: collapse;
  inline-size: 100%;
}

caption {
  caption-side: bottom;
  margin-block-start: var(--space-s);
}

// MEDIA ELEMENTS ////////////////////

// Captions for figures
figcaption {
  font-size: var(--font-size-base);
  text-align: center;
}

// SVG ELEMENTS ////////////////////
svg:not([class]) {
  inline-size: auto;
  block-size: 1lh;
}

svg {
  flex-shrink: 0;
}

svg[role="img"][width][height] {
  inline-size: revert;
  block-size: revert;
  background: var(--color-light);
  padding: var(--space-xs);
}

// INTERACTIVE ELEMENTS ////////////////////
// Link styles
a:not([class]):hover {
  text-underline-offset: 0.2lh;
}

:is(h1, h2, h3, h4) a:not([class]) {
  text-decoration-thickness: 0.1ex;
  text-underline-offset: 0.2ex;
}

:is(h1, h2, h3, h4) a:not([class]):hover {
  text-underline-offset: 0.3ex;
}

// INTERACTIVE STATES ////////////////////
// Focus styles
:focus {
  outline: none;
}

:focus-visible {
  outline: 2px solid var(--focus-color, currentColor);
  outline-offset: var(--focus-offset, 0.2lh);
}

// Firefox needs display: inline-block for full element outline.
@supports (-moz-appearance: none) {
  :root {
    --focus-offset: 0.08em;
  }
}

// Selection styles
::selection {
  color: var(--color-global-background);
  background: var(--color-global-text);
}

// Target styles
:target {
  scroll-margin-block: 5lh;
}
