/*
 * COLUMNS
 * A layout that distributes items across a grid with specified columns.
 * This fluid and responsive grid system adapts to different viewport sizes
 * using minimal breakpoints.
 * Info: https://utopia.fyi/grid/calculator/
 * 
 * CUSTOM PROPERTIES AND CONFIGURATION
 * --columns: The number of columns in the grid.
 * --space-columns: The space between each column.
 * --columns-item-span: The number of columns each item should span.
 * 
 * MODIFIERS
 * --columns-item-span can be modified by adding a class of the form
 * l-columns__x/y, where x/y is the fraction of the grid the item should span.
 */

@use "../20-mixins/media-query" as *;
@use "../00-settings/theme-config" as *;
$prefix: map-get($class-type-prefixes, layouts);

.#{$prefix}columns {
  --columns: 12;

  display: grid;
  grid-template-columns: repeat(var(--columns), minmax(0, 1fr));
  gap: var(--space-columns, var(--space-gutter));

  & > * {
    grid-column: span min(var(--columns-item-span, var(--columns)));
  }

  & > &--1-4 {
    --columns-item-span: calc(var(--columns) / 4);
  }
  & > &--1-3 {
    --columns-item-span: calc(var(--columns) / 3);
  }
  & > &--2-5 {
    --columns-item-span: calc((var(--columns) / 5) * 2);
  }
  & > &--1-2 {
    --columns-item-span: calc(var(--columns) / 2);
  }
  & > &--3-5 {
    --columns-item-span: calc((var(--columns) / 5) * 3);
  }
  & > &--2-3 {
    --columns-item-span: calc((var(--columns) / 3) * 2);
  }
  & > &--3-4 {
    --columns-item-span: calc((var(--columns) / 4) * 3);
  }

  // @include media-query(up-to, tablet) {
  //   --columns: 1;
  // }
}
