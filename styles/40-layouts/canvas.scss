/*
 * CANVAS
 * A layout that allows for content, breakout, and full-width sections with
 * consistent spacing.
 * Info: https://ryanmulligan.dev/blog/layout-breakouts/
 * 
 * CUSTOM PROPERTIES AND CONFIGURATION
 * --canvas-full-width: Full content width, minimum of gutter space or 1 fraction
 * of available space.
 * --canvas-content: Content section width, minimum of 100% minus twice gutter
 * space or max layout width.
 * --canvas-section-width: A quarter of the content width.
 *
 * GRID STRUCTURE
 * The .l-canvas grid has 6 columns. By default, direct children fill the content
 * columns. The .l-canvas--full-width class allows children to occupy the full
 * grid width.
 *
 * DATA ATTRIBUTES
 * A data attribute [data-full-width="contained"] can be used to add padding to
 * the sides of a full-width section.
 */

@use "../00-settings/theme-config" as *;
$prefix: map-get($class-type-prefixes, layouts);

.#{$prefix}canvas {
  --canvas-full-width: minmax(var(--space-gutter), 1fr);
  --canvas-content: min(
    100% - (var(--space-gutter) * 2),
    var(--layout-base-max)
  );
  --canvas-section-count: 3;
  --canvas-section-width: calc(
    var(--canvas-content) / var(--canvas-section-count)
  );

  display: grid;
  grid-template-columns:
    [full-width-start] var(--canvas-full-width)
    [content-start] repeat(
      var(--canvas-section-count),
      var(--canvas-section-width)
    )
    [content-end]
    var(--canvas-full-width) [full-width-end];
  position: relative;

  & > * {
    grid-column: content;
  }

  & > &--full-width {
    grid-column: full-width;

    &[data-full-width="contained"] {
      padding-inline: var(--space-gutter);
    }
  }
}
